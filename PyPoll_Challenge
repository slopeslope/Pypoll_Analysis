import csv
import os
# assign a variable for the file to load and the path.
file_to_load = os.path.join("election_results (1).csv")

#Assign a variable to save the file to a path .
file_to_save = os.path.join("analysis", "election_analysis.txt")

# Print the candidate name from each row
candidate_options = []

# Empty County list 
counties = []

# empty dict for county votes
county_votes = {}

#Declare empty dictionary
candidate_votes = {}

#1 Initialize a total vote counter
total_votes = 0

#Winning Candidate and Winning Count Tracker
winning_candidate = ""
winning_count = 0
winning_percentage = 0

#Largest turnout 
largest_turnout = 0
largest_turnout_county = ""


# open the election results and read the file.
with open(file_to_load) as election_data:
    #To do: read and analyze the data here.
    file_reader = csv.reader(election_data)
    
    #print the header row
    headers = next(file_reader)
    print(headers)

    #print each row in the CSV file.
    for row in file_reader:
        # Add to the total vote count
        total_votes += 1

        # Print the candidate name from each row
        candidate_name = row[2] 

        #print the county name from each row
        county_name = row[1]

        # Add the candidate name to the candidate list
        if candidate_name not in candidate_options: 
            #Add the candidate name to the candidate list
            candidate_options.append(candidate_name)
            #Begin tracking hat candidate's vote count
            candidate_votes[candidate_name] = 0
        
        if county_name not in counties:
            #add the counties to the list
            counties.append(county_name)
            #begin track county's vote count
            county_votes[county_name] = 0



        # Add a vote to that candidate's count.
        candidate_votes[candidate_name] += 1

        #add a vote to the county's county.
        county_votes[county_name] += 1

            #1. Iterate through the candidate list.
for candidate in candidate_votes:
    #2. Retrieve vote count of a candidate.
    votes = candidate_votes[candidate]
    #3. Calculate the percentage of votes.
    vote_percentage = int(votes) / int(total_votes) * 100
    #Determin winning vote count and candidate
    if (votes > winning_count) and (vote_percentage > winning_percentage):
            #if true then set winning_count = votes and winning_percent
        winning_count = votes
        winning_percentage = vote_percentage
        winning_candidate = candidate 
    print(f"{candidate}: {vote_percentage:.1f}% ({votes:,})\n")


for counties in county_votes:
    #retrieve votes
    votes = county_votes[counties]
    #calculate percentage
    vote_percentage = int(votes) / int(total_votes) * 100

    if (votes > largest_turnout) and (vote_percentage > winning_percentage):
        largest_turnout = votes
        largest_turnout_county = counties 
        winning_percentage = vote_percentage
    print(f"{counties}: {vote_percentage:.0f}% ({votes:,})\n")

    
largest_turnout_summary = (
    f"------------------------\n"
    f"Largest turnout county: {largest_turnout_county}\n"
    f"Largest percentage of county votes: {winning_percentage}\n"
    f"Largest turnout: {largest_turnout}\n"
    f"------------------------\n"


)



winning_candidate_summary = (
    f"-------------------------\n"
    f"Winner: {winning_candidate}\n"
    f"Winning Vote Count: {winning_count:,}\n"
    f"Winning Percentage: {winning_percentage:.1f}%\n"
    f"-------------------------\n")
print(winning_candidate_summary)
print(largest_turnout_summary)
#3 Print the candidate list.
print(candidate_votes)

#using the with statement open the file as a text file 
with open(file_to_save, "w") as txt_file:
    #Write some data to the file. 
    txt_file.write("Counties in the election\n-------------------------\nArapahoe\nDenver\nJefferson\n")  

    txt_file.write(winning_candidate_summary)
    txt_file.write(largest_turnout_summary)
